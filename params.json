{"name":"Win32api-tourial","tagline":"using window class ","body":"## win32 api tourial 1\r\n把win32 api封装在类里的一次尝试\r\n```cpp\r\n#include <Windows.h>\r\n#include <iostream>\r\nusing namespace std;\r\nLRESULT CALLBACK WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam);\r\nclass windowclass:public WNDCLASSEX\r\n{\r\npublic:\r\n\twindowclass(WNDPROC WndProc ,char const * className, HINSTANCE hInst)\r\n\t{\r\n\t\tcbSize          = sizeof (WNDCLASSEX);\r\n\t    style           = CS_HREDRAW | CS_VREDRAW;\r\n\t    lpfnWndProc     = WndProc;\r\n\t    cbClsExtra      = 0;\r\n\t    cbWndExtra      = 0;\r\n\t    hInstance       = hInst;\r\n\t    hIcon           = 0;\r\n\t    hIconSm         = 0;\r\n\t    hCursor         = LoadCursor (0, IDC_ARROW);\r\n\t    hbrBackground   = (HBRUSH) (COLOR_WINDOW + 1);\r\n\t    lpszMenuName    = className;\r\n\t    lpszClassName   = className;\r\n\t}\r\n\tvoid Register()\r\n\t{\r\n\t\tif(!RegisterClassEx(this))\r\n\t\t{\r\n\t\t\tMessageBox(NULL, \"Window Registration Failed!\", \"Error!\",\r\n\t\t\t\tMB_ICONEXCLAMATION | MB_OK);\r\n\t\t\treturn ;\r\n\t\t}\r\n\t}\r\n};\r\nclass window\r\n{\r\npublic:\r\n\twindow():_hwnd(0){}\r\n\twindow(char const* caption, char const* className, HINSTANCE hInstance)\r\n\t{\r\n\t\t_hwnd = CreateWindow(\r\n\t\t\tclassName,\r\n\t\t\tcaption,\r\n\t\t\tWS_OVERLAPPEDWINDOW,\r\n\t\t\tCW_USEDEFAULT, CW_USEDEFAULT, 400, 320,\r\n\t\t\tNULL, NULL, hInstance, NULL);\r\n\t\tif(_hwnd == NULL)\r\n\t\t{\r\n\t\t\tMessageBox(NULL, \"Window Creation Failed!\", \"Error!\",\r\n\t\t\t\tMB_ICONEXCLAMATION | MB_OK);\t\t\r\n\t\t}\r\n\t}\r\n\tvoid Show(int nCmdShow)\r\n\t{\r\n\t\tShowWindow(_hwnd, nCmdShow);\r\n\t\tUpdateWindow(_hwnd);\r\n\t}\r\n\toperator HWND(){return _hwnd;}\r\nprotected:\r\n\tHWND _hwnd;\r\n};\r\n\r\nint WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance,\r\n    LPSTR lpCmdLine, int nCmdShow)\r\n{\r\n\tchar className[]=\"roger\";\r\n\tHWND hwnd;\r\n\tMSG msg;\r\n\ttry\r\n\t{\r\n\t\t//Step 1: Registering the Window Class\r\n\t\twindowclass winClass(WndProc,className,hInstance);\r\n\t\twinClass.Register();\r\n\t\t// Step 2: Creating the Window\r\n\t\twindow win(className,className,hInstance);\r\n\t\twin.Show(nCmdShow);\r\n\r\n\t\t/*window win2(\"winow2\",\"win2\",hInstance);\r\n\t\twin2.Show(nCmdShow);*/\r\n\t}\r\n\tcatch(...)\r\n\t{\r\n\t\tMessageBox (0, \"Unknown\", \"Exception\", MB_ICONEXCLAMATION | MB_OK);\r\n\t}\r\n\tint status;\r\n\t// Step 3: The Message Loop\r\n\twhile((status= GetMessage(&msg,0,0,0))!=0)\r\n\t{\r\n\t\tif(status == -1)\r\n\t\t\treturn -1;\r\n\t\tTranslateMessage(&msg);\r\n\t\tDispatchMessage(&msg);\r\n\t}\r\n\treturn msg.wParam;\r\n}\r\n// Step 4: the Window Procedure\r\nLRESULT CALLBACK WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)\r\n{\r\n    switch(msg)\r\n    {\r\n\t\tcase WM_LBUTTONDOWN:\r\n\t\t\t{\r\n\t\t\tchar szFileName[MAX_PATH];\r\n            HINSTANCE hInstance = GetModuleHandle(NULL);\r\n\r\n\t\t\tHDC hdc;\r\n\t\t\thdc = GetDC(hwnd);\r\n\t\t\tTextOut(hdc,0,50,\"this is a test\",10);\r\n\t\t\tReleaseDC(hwnd,hdc);\r\n\r\n\t\t\t//\r\n\t\t\t//window win2(\"win2\",\"window2\",hInstance);\r\n\t\t\t//win2.Show(SW_SHOW);\r\n\r\n            GetModuleFileName(hInstance, szFileName, MAX_PATH);\r\n            MessageBox(hwnd, szFileName, \"This program is:\", MB_OK | MB_ICONINFORMATION);\r\n\t\t\t}\t\t\r\n\t\tbreak;\t\r\n\t\tcase WM_CLOSE:\r\n            DestroyWindow(hwnd);\r\n\t\t\tbreak;\r\n        case WM_DESTROY:\r\n            PostQuitMessage(0);\r\n\t\t\tbreak;\r\n        default:\r\n            return DefWindowProc(hwnd, msg, wParam, lParam);\r\n    }\r\n    return 0;\r\n}\r\n```\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}